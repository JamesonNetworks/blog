{"title":"The Sparc Hackathon 2.0","subtitle":"Posted on August 27, 2012 by Brent","date":"1346040000000","markdown":{"sections":[{"title":"","contents":[{"type":"paragraph","content":"For the second year in a row, Sparc hosted their Hackathon: an all day event allowing teams to compete to create applications on mobile platforms and present those applications to a panel of judges at the end of the day. You can read more about the hackathon and Sparc using the links at the end of this article."},{"type":"paragraph","content":"Basically, starting in the morning on a Saturday, the teams are assembled and ideas are chosen to develop over the course of that day. Twenty eight teams competed in an event marked with free food, ubiquitous technology, and droves of programmers. Experiencing the hackathon has influenced my opinions on software development from both a collaborative and presentational point of view."},{"type":"paragraph","content":"To facilitate collaboration among the teams, Sparc opened up private repositories on GitHub for each of the teams. Throughout the course of the day, teams committed their code and a “board” (TV with a live stat tracker) kept track of the number of lines of code and the commit messages that were being pushed. Git is a fantastic tool for keeping track of revision history and enabling independent work by multiple team members working on the same projects."}]},{"title":"Collaboration","contents":[{"type":"paragraph","content":"Our team used a Dropbox account which hosted our personal Git repository. We shared the same working directory and I would periodically push the files when the time felt right. Since we had a team of three members, it was fairly easy to resist the urge to work on the same files at the same time. Using the dropbox allowed us to have instant feedback on our application as we developed throughout the day. Dropbox proved to be a very powerful collaborative tool."},{"type":"paragraph","content":"This was my first experience developing a mobile app or really working in the mobile space at all. As such, most of the programming was done by another member of our team (she had experience working with the Sencha framework and PhoneGap, our weapons of choice for this contest) and I spent most of the day customizing the theming of the framework with SASS and Compass, and learning about iOS transitions and how to access them via the Sencha framework. The third member of our team worked on animations for the application. Our team dynamic was very balanced and worked out perfectly for the goals we were attempting to accomplish."},{"type":"paragraph","content":"The most important part of our development process was Prototyping. Before we started working on the application at all, we drew up several maps of where buttons would be, what they would do, and how our screens would look. We established the flow of the application early on, and periodically revised the flow throughout the day based on our progress. It was such a positive experience that any UI design I do in the future will involve prototyping."}]},{"title":"Presentation","contents":[{"type":"paragraph","content":"The second thing I learned about “crash-designing” a piece of software in one day, and what I would almost consider a cardinal rule for any software project where a demonstration needs to be created within 12 hours:"},{},{"type":"paragraph","content":"If the ultimate goal of building the software is presenting the software, start thinking about the presentation first. Essentially, when given 12 hours to code an app, you are coding a presentable user interface with a skeleton of functionality. You want to be able to show people your idea, not your implementation. Implementations, while important to think about from a “this would be realistically possible” point of view, should not be the focus of your programming. The idea should be the end game of your interface."},{"type":"paragraph","content":"I strongly believe that software presentations, specifically highlighting features and putting together convincing and workable demos, should be a larger part of the software engineering curriculum. A great idea when poorly presented becomes will inevitably fade to the back burner of any software engineering firm."},{"type":"paragraph","content":"Our team, Team Honeybadger, was able to take home the 2nd place prize for applications built with a framework."},{"type":"paragraph","content":"Overall the Sparc Hackathon 2.0 was a tremendous success! I’m glad that Sparc hosts the event and would like to thank them and everyone who was involved with making the Hackathon possible! I look forward to seeing everyone again at next years Hackathon 3.0!"}]}]}}